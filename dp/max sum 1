#找到不相邻的数字的最大和
#[1,2,4,1,7,8,3],数字不能相邻，最少间隔一个

import numpy as np
arr=[1,2,4,1,7,8,3]

def rec_opt(arr,i): #digui
    if i==0:
        return arr[0]
    elif i==1:
        return max(arr[0],arr[1])
    else:
        a = rec_opt(arr,i-1)
        b = rec_opt(arr,i-2)+arr[i]
        return max(a,b)

print(rec_opt(arr,6))

def dp_opt(arr):
    opt=np.zeros(len(arr))
    opt[0]=arr[0]
    opt[1]=max(arr[0],arr[1])
    for i in range(2,len(arr)):
        a=opt[i-1]
        b=opt[i-2]+arr[i]
        opt[i]=max(a,b)
    return opt[len(arr)-1]

print(dp_opt(arr))
