#给定数组和目标，寻找数组元素能否求和为目标
import numpy as np
arr=[3,34,4,12,5,2]

def rec_opt(arr,i,s):  #递归
    if s==0:
        return True
    elif i==0:
        return arr[0]==s
    elif arr[i]>s:
        return rec_opt(arr,i-1,s)
    else:
        a=rec_opt(arr,i-1,s)
        b=rec_opt(arr,i-1,s-arr[i])
        return a or b

print(rec_opt(arr,len(arr)-1,9))

def dp_opt(arr,S): #非递归
    opt=np.zeros((len(arr),S+1),dtype=bool)
    opt[0,:]=False
    opt[0,arr[0]]=True
    opt[:,0]=True
    for i in range(1,len(arr)):
        for s in range(1,S+1):
            if arr[i]>s:
                opt[i,s]=opt[i-1,s]
            else:
                a=opt[i-1,s]
                b=opt[i-1,s-arr[i]]
                opt[i,s]=a or b
    r,c = opt.shape
    return opt[r-1,c-1]

print(dp_opt(arr,9))



